{"ast":null,"code":"var _jsxFileName = \"C:\\\\4 working\\\\project final\\\\frontend\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react'; // useRef to store initial code state\nimport { Editor } from '@monaco-editor/react';\nimport socket from '../services/socket';\nimport axios from '../services/axios';\nimport Chat from './Chat';\nimport { useLocation } from 'react-router-dom'; // Import useLocation to get data passed from Project.js\nimport './Editor.css'; // Import the CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = () => {\n  _s();\n  var _location$state, _location$state2;\n  const location = useLocation();\n  const projectName = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.projectName) || ''; // Fallback to empty string if undefined\n  const pjpassword = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.pjpassword) || ''; // Fallback to empty string if undefined\n\n  const [code, setCode] = useState(''); // Current code being edited\n  const [language, setLanguage] = useState('javascript');\n  const [isSaved, setIsSaved] = useState(false);\n  const initialCodeRef = useRef(''); // Ref to store the initial code when user joins the project\n  const editedSinceJoin = useRef(false); // Track whether the user has edited the code since joining\n\n  // Fetch project code on component mount\n  useEffect(() => {\n    console.log('Project Name:', projectName);\n    console.log('Project Password:', pjpassword);\n\n    // Ensure project name and password exist\n    if (!projectName || !pjpassword) {\n      alert('Project name or password is missing.');\n      return;\n    }\n    const fetchProjectCode = async () => {\n      try {\n        const token = localStorage.getItem('token'); // Get the token from localStorage\n\n        const response = await axios.get(`/projects/${projectName}/${pjpassword}`, {\n          headers: {\n            'Authorization': `Bearer ${token}` // Include token in Authorization header\n          }\n        });\n        if (response.data.code !== undefined) {\n          if (response.data.code === '') {\n            const defaultCode = '// No code found for this project.\\n';\n            setCode(defaultCode);\n            initialCodeRef.current = defaultCode; // Save initial code\n          } else {\n            setCode(response.data.code); // Set the project code if available\n            initialCodeRef.current = response.data.code; // Save initial code\n          }\n        } else {\n          console.error('No code found for the project.');\n          const defaultCode = '// No code found for this project.\\n';\n          setCode(defaultCode); // Provide fallback text\n          initialCodeRef.current = defaultCode; // Save initial code\n        }\n      } catch (error) {\n        console.error('Failed to fetch project code:', error.message);\n      }\n    };\n    fetchProjectCode();\n  }, [projectName, pjpassword]);\n\n  // Real-time code updates from other users\n  useEffect(() => {\n    socket.on('receiveCode', codeData => {\n      setCode(codeData.code);\n    });\n    return () => {\n      socket.off('receiveCode');\n    };\n  }, []);\n\n  // Handle code change in editor\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n    editedSinceJoin.current = true; // Mark that the user has edited the code since joining\n    socket.emit('codeChange', {\n      code: newCode,\n      projectName,\n      pjpassword\n    });\n  };\n\n  // Save code to the backend\n  const saveCode = async () => {\n    if (!projectName || !pjpassword) {\n      alert('Project name or password is missing.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token'); // Get the token from localStorage\n\n      await axios.post(`/projects/saveCode`, {\n        projectName,\n        pjpassword,\n        code\n      }, {\n        headers: {\n          'Authorization': `Bearer ${token}` // Add token in the Authorization header\n        }\n      });\n      setIsSaved(true);\n      editedSinceJoin.current = false; // Reset edited status since the code is now saved\n      alert('Code saved successfully');\n    } catch (error) {\n      console.error('Error saving code:', error.message);\n      alert('Failed to save code');\n    }\n  };\n\n  // Unsave code (clear unsaved changes and revert to the initial code)\n  const unsaveCode = async () => {\n    if (!projectName || !pjpassword) {\n      alert('Project name or password is missing.');\n      return;\n    }\n    try {\n      const token = localStorage.getItem('token'); // Get the token from localStorage\n\n      if (editedSinceJoin.current) {\n        // If the user has edited, clear unsaved changes and revert to the initial code\n        setCode(initialCodeRef.current);\n        editedSinceJoin.current = false; // Reset the edited flag\n        alert('Unsaved changes cleared. Reverted to the initial code.');\n      } else {\n        alert('No unsaved changes to clear.');\n      }\n      setIsSaved(false);\n    } catch (error) {\n      console.error('Error reverting code:', error.message);\n      alert('Failed to revert code');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-and-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"editor-section\",\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          height: \"80vh\",\n          defaultLanguage: language,\n          value: code,\n          theme: \"vs-dark\",\n          onChange: handleCodeChange,\n          options: {\n            fontSize: 14,\n            automaticLayout: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editor-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveCode,\n            disabled: isSaved,\n            className: \"save-button\",\n            children: \"Save Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: unsaveCode,\n            disabled: !editedSinceJoin.current,\n            className: \"unsave-button\",\n            children: \"Unsave Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-section\",\n        children: /*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 9\n  }, this);\n};\n_s(CodeEditor, \"nC4awl93qKqpBWXwq3kCx2hSBHo=\", false, function () {\n  return [useLocation];\n});\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Editor","socket","axios","Chat","useLocation","jsxDEV","_jsxDEV","CodeEditor","_s","_location$state","_location$state2","location","projectName","state","pjpassword","code","setCode","language","setLanguage","isSaved","setIsSaved","initialCodeRef","editedSinceJoin","console","log","alert","fetchProjectCode","token","localStorage","getItem","response","get","headers","data","undefined","defaultCode","current","error","message","on","codeData","off","handleCodeChange","newCode","emit","saveCode","post","unsaveCode","className","children","height","defaultLanguage","value","theme","onChange","options","fontSize","automaticLayout","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/4 working/project final/frontend/src/components/Editor.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react'; // useRef to store initial code state\r\nimport { Editor } from '@monaco-editor/react';\r\nimport socket from '../services/socket';\r\nimport axios from '../services/axios';\r\nimport Chat from './Chat';\r\nimport { useLocation } from 'react-router-dom'; // Import useLocation to get data passed from Project.js\r\nimport './Editor.css'; // Import the CSS file for styling\r\n\r\nconst CodeEditor = () => {\r\n    const location = useLocation();\r\n    const projectName = location.state?.projectName || ''; // Fallback to empty string if undefined\r\n    const pjpassword = location.state?.pjpassword || ''; // Fallback to empty string if undefined\r\n\r\n    const [code, setCode] = useState(''); // Current code being edited\r\n    const [language, setLanguage] = useState('javascript');\r\n    const [isSaved, setIsSaved] = useState(false);\r\n    \r\n    const initialCodeRef = useRef(''); // Ref to store the initial code when user joins the project\r\n    const editedSinceJoin = useRef(false); // Track whether the user has edited the code since joining\r\n\r\n    // Fetch project code on component mount\r\n    useEffect(() => {\r\n        console.log('Project Name:', projectName);\r\n        console.log('Project Password:', pjpassword);\r\n\r\n        // Ensure project name and password exist\r\n        if (!projectName || !pjpassword) {\r\n            alert('Project name or password is missing.');\r\n            return;\r\n        }\r\n\r\n        const fetchProjectCode = async () => {\r\n            try {\r\n                const token = localStorage.getItem('token'); // Get the token from localStorage\r\n                \r\n                const response = await axios.get(`/projects/${projectName}/${pjpassword}`, {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}` // Include token in Authorization header\r\n                    }\r\n                });\r\n\r\n                if (response.data.code !== undefined) {\r\n                    if (response.data.code === '') {\r\n                        const defaultCode = '// No code found for this project.\\n';\r\n                        setCode(defaultCode);\r\n                        initialCodeRef.current = defaultCode; // Save initial code\r\n                    } else {\r\n                        setCode(response.data.code); // Set the project code if available\r\n                        initialCodeRef.current = response.data.code; // Save initial code\r\n                    }\r\n                } else {\r\n                    console.error('No code found for the project.');\r\n                    const defaultCode = '// No code found for this project.\\n';\r\n                    setCode(defaultCode); // Provide fallback text\r\n                    initialCodeRef.current = defaultCode; // Save initial code\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to fetch project code:', error.message);\r\n            }\r\n        };\r\n\r\n        fetchProjectCode();\r\n    }, [projectName, pjpassword]);\r\n\r\n    // Real-time code updates from other users\r\n    useEffect(() => {\r\n        socket.on('receiveCode', (codeData) => {\r\n            setCode(codeData.code);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('receiveCode');\r\n        };\r\n    }, []);\r\n\r\n    // Handle code change in editor\r\n    const handleCodeChange = (newCode) => {\r\n        setCode(newCode);\r\n        editedSinceJoin.current = true; // Mark that the user has edited the code since joining\r\n        socket.emit('codeChange', { code: newCode, projectName, pjpassword });\r\n    };\r\n\r\n    // Save code to the backend\r\n    const saveCode = async () => {\r\n        if (!projectName || !pjpassword) {\r\n            alert('Project name or password is missing.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem('token'); // Get the token from localStorage\r\n\r\n            await axios.post(\r\n                `/projects/saveCode`,\r\n                { projectName, pjpassword, code },\r\n                {\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}` // Add token in the Authorization header\r\n                    }\r\n                }\r\n            );\r\n            setIsSaved(true);\r\n            editedSinceJoin.current = false; // Reset edited status since the code is now saved\r\n            alert('Code saved successfully');\r\n        } catch (error) {\r\n            console.error('Error saving code:', error.message);\r\n            alert('Failed to save code');\r\n        }\r\n    };\r\n\r\n    // Unsave code (clear unsaved changes and revert to the initial code)\r\n    const unsaveCode = async () => {\r\n        if (!projectName || !pjpassword) {\r\n            alert('Project name or password is missing.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const token = localStorage.getItem('token'); // Get the token from localStorage\r\n\r\n            if (editedSinceJoin.current) {\r\n                // If the user has edited, clear unsaved changes and revert to the initial code\r\n                setCode(initialCodeRef.current);\r\n                editedSinceJoin.current = false; // Reset the edited flag\r\n                alert('Unsaved changes cleared. Reverted to the initial code.');\r\n            } else {\r\n                alert('No unsaved changes to clear.');\r\n            }\r\n\r\n            setIsSaved(false);\r\n        } catch (error) {\r\n            console.error('Error reverting code:', error.message);\r\n            alert('Failed to revert code');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <div className=\"editor-and-chat\">\r\n                {/* Code Editor Section */}\r\n                <div className=\"editor-section\">\r\n                    <Editor\r\n                        height=\"80vh\"\r\n                        defaultLanguage={language}\r\n                        value={code}\r\n                        theme=\"vs-dark\"\r\n                        onChange={handleCodeChange}\r\n                        options={{\r\n                            fontSize: 14,\r\n                            automaticLayout: true,\r\n                        }}\r\n                    />\r\n                    <div className=\"editor-buttons\">\r\n                        <button onClick={saveCode} disabled={isSaved} className=\"save-button\">\r\n                            Save Code\r\n                        </button>\r\n                        <button onClick={unsaveCode} disabled={!editedSinceJoin.current} className=\"unsave-button\">\r\n                            Unsave Code\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Chat Section */}\r\n                <div className=\"chat-section\">\r\n                    <Chat />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}