{"ast":null,"code":"var _jsxFileName = \"C:\\\\project final\\\\frontend\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Editor } from '@monaco-editor/react'; // Monaco Editor import\nimport socket from '../services/socket'; // Ensure socket is set up\nimport './Editor.css'; // (Optional) For styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = () => {\n  _s();\n  const [code, setCode] = useState(''); // Store the code\n  const [language, setLanguage] = useState('javascript'); // Default language\n  const [messages, setMessages] = useState([]); // Store messages for chat\n  const [messageInput, setMessageInput] = useState(''); // Store user input for messages\n\n  // Listen for real-time code updates and new messages\n  useEffect(() => {\n    socket.on('receiveCode', codeData => {\n      setCode(codeData.code); // Update code from other users\n    });\n    socket.on('receiveMessage', msgData => {\n      setMessages(prevMessages => [...prevMessages, msgData.message]); // Add new message to chat\n    });\n    socket.on('userJoined', userData => {\n      setMessages(prevMessages => [...prevMessages, `${userData.name} has joined the project`]); // Notify when a new user joins\n    });\n    return () => {\n      socket.off('receiveCode');\n      socket.off('receiveMessage');\n      socket.off('userJoined');\n    };\n  }, []);\n\n  // Emit real-time code changes to the backend\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n    socket.emit('codeChange', {\n      code: newCode\n    });\n  };\n\n  // Handle sending a message to the chat\n  const handleSendMessage = () => {\n    if (messageInput.trim()) {\n      socket.emit('sendMessage', {\n        message: messageInput\n      });\n      setMessageInput(''); // Clear input after sending\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      height: '90vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        flex: 1\n      },\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"100%\",\n        defaultLanguage: language,\n        value: code,\n        theme: \"vs-dark\" // Dark theme like VS Code\n        ,\n        onChange: handleCodeChange,\n        options: {\n          fontSize: 14,\n          automaticLayout: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '300px',\n        borderLeft: '2px solid #ccc',\n        padding: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          maxHeight: 'calc(100vh - 160px)',\n          overflowY: 'scroll',\n          marginBottom: '10px'\n        },\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          children: msg\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: messageInput,\n          onChange: e => setMessageInput(e.target.value),\n          placeholder: \"Type a message...\",\n          style: {\n            flex: 1,\n            padding: '5px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          style: {\n            padding: '5px'\n          },\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(CodeEditor, \"MPTwQJU58BUnztfu8wIC8DDXAHk=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","Editor","socket","jsxDEV","_jsxDEV","CodeEditor","_s","code","setCode","language","setLanguage","messages","setMessages","messageInput","setMessageInput","on","codeData","msgData","prevMessages","message","userData","name","off","handleCodeChange","newCode","emit","handleSendMessage","trim","style","display","height","children","flex","defaultLanguage","value","theme","onChange","options","fontSize","automaticLayout","fileName","_jsxFileName","lineNumber","columnNumber","width","borderLeft","padding","maxHeight","overflowY","marginBottom","map","msg","index","type","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/project final/frontend/src/components/Editor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Editor } from '@monaco-editor/react';  // Monaco Editor import\r\nimport socket from '../services/socket';  // Ensure socket is set up\r\nimport './Editor.css';  // (Optional) For styling\r\n\r\nconst CodeEditor = () => {\r\n    const [code, setCode] = useState('');  // Store the code\r\n    const [language, setLanguage] = useState('javascript');  // Default language\r\n    const [messages, setMessages] = useState([]);  // Store messages for chat\r\n    const [messageInput, setMessageInput] = useState('');  // Store user input for messages\r\n\r\n    // Listen for real-time code updates and new messages\r\n    useEffect(() => {\r\n        socket.on('receiveCode', (codeData) => {\r\n            setCode(codeData.code);  // Update code from other users\r\n        });\r\n\r\n        socket.on('receiveMessage', (msgData) => {\r\n            setMessages((prevMessages) => [...prevMessages, msgData.message]);  // Add new message to chat\r\n        });\r\n\r\n        socket.on('userJoined', (userData) => {\r\n            setMessages((prevMessages) => [\r\n                ...prevMessages,\r\n                `${userData.name} has joined the project`\r\n            ]);  // Notify when a new user joins\r\n        });\r\n\r\n        return () => {\r\n            socket.off('receiveCode');\r\n            socket.off('receiveMessage');\r\n            socket.off('userJoined');\r\n        };\r\n    }, []);\r\n\r\n    // Emit real-time code changes to the backend\r\n    const handleCodeChange = (newCode) => {\r\n        setCode(newCode);\r\n        socket.emit('codeChange', { code: newCode });\r\n    };\r\n\r\n    // Handle sending a message to the chat\r\n    const handleSendMessage = () => {\r\n        if (messageInput.trim()) {\r\n            socket.emit('sendMessage', { message: messageInput });\r\n            setMessageInput('');  // Clear input after sending\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ display: 'flex', height: '90vh' }}>\r\n            {/* Monaco Code Editor */}\r\n            <div style={{ flex: 1 }}>\r\n                <Editor\r\n                    height=\"100%\"\r\n                    defaultLanguage={language}\r\n                    value={code}\r\n                    theme=\"vs-dark\"  // Dark theme like VS Code\r\n                    onChange={handleCodeChange}\r\n                    options={{\r\n                        fontSize: 14,\r\n                        automaticLayout: true,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            {/* Chat Panel */}\r\n            <div style={{ width: '300px', borderLeft: '2px solid #ccc', padding: '10px' }}>\r\n                <h3>Chat</h3>\r\n                <div style={{ maxHeight: 'calc(100vh - 160px)', overflowY: 'scroll', marginBottom: '10px' }}>\r\n                    {/* Display chat messages */}\r\n                    {messages.map((msg, index) => (\r\n                        <p key={index}>{msg}</p>\r\n                    ))}\r\n                </div>\r\n\r\n                <div style={{ display: 'flex' }}>\r\n                    {/* Message input */}\r\n                    <input\r\n                        type=\"text\"\r\n                        value={messageInput}\r\n                        onChange={(e) => setMessageInput(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                        style={{ flex: 1, padding: '5px' }}\r\n                    />\r\n                    {/* Send button */}\r\n                    <button onClick={handleSendMessage} style={{ padding: '5px' }}>\r\n                        Send\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}