{"ast":null,"code":"import React,{useState}from'react';import axios from'../services/axios';// Ensure axios is properly set up for API calls\nimport{useNavigate}from'react-router-dom';// For navigation after project creation/joining\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Project=()=>{const[projectData,setProjectData]=useState({projectName:'',pjpassword:''});// Updated fields\nconst[error,setError]=useState('');// Error state for displaying error messages\nconst navigate=useNavigate();// For redirecting after project creation or joining\n// Handle input change for both project name and password\nconst handleInputChange=e=>{setProjectData({...projectData,[e.target.name]:e.target.value});};// Create Project (with token in the header)\nconst handleCreateProject=async()=>{const token=localStorage.getItem('token');// Get the token from local storage\nconst config={headers:{'Authorization':`Bearer ${token}`// Send token in the Authorization header\n}};// Frontend validation for missing fields\nif(!projectData.projectName||!projectData.pjpassword){setError('Project name and password are required');return;}try{// Make the POST request to create the project\nconst response=await axios.post('http://localhost:5000/api/projects/create',projectData,config);console.log('Project created successfully:',response.data);// Pass projectName and pjpassword to the editor via state\nnavigate('/editor',{state:{projectName:projectData.projectName,pjpassword:projectData.pjpassword}});}catch(error){var _error$response,_error$response$data;console.error('Error creating project:',error);setError(((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.error)||'Error creating project');// Set error if project creation fails\n}};// Join Project (with token in the header)\nconst handleJoinProject=async()=>{const token=localStorage.getItem('token');// Get the token from local storage\nconst config={headers:{'Authorization':`Bearer ${token}`// Send token in the Authorization header\n}};// Frontend validation for missing fields\nif(!projectData.projectName||!projectData.pjpassword){setError('Project name and password are required');return;}try{// Make the POST request to join the project\nconst response=await axios.post('http://localhost:5000/api/projects/join',projectData,config);console.log('Joined project successfully:',response.data);// Pass projectName and pjpassword to the editor via state\nnavigate('/editor',{state:{projectName:projectData.projectName,pjpassword:projectData.pjpassword}});}catch(error){var _error$response2,_error$response2$data;console.error('Error joining project:',error);setError(((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.error)||'Error joining project');// Set error if project joining fails\n}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Create or Join a Project\"}),error&&/*#__PURE__*/_jsx(\"p\",{style:{color:'red'},children:error}),\"  \",/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"projectName\"// Corrected to match the backend schema (projectName instead of pjname)\n,placeholder:\"Project Name\",value:projectData.projectName// Corrected to use projectName from state\n,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"pjpassword\"// Corrected to match the backend schema\n,placeholder:\"Password\",value:projectData.pjpassword// Corrected to use pjpassword from state\n,onChange:handleInputChange,required:true}),/*#__PURE__*/_jsx(\"button\",{onClick:handleCreateProject,children:\"Create Project\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleJoinProject,children:\"Join Project\"})]});};export default Project;","map":{"version":3,"names":["React","useState","axios","useNavigate","jsx","_jsx","jsxs","_jsxs","Project","projectData","setProjectData","projectName","pjpassword","error","setError","navigate","handleInputChange","e","target","name","value","handleCreateProject","token","localStorage","getItem","config","headers","response","post","console","log","data","state","_error$response","_error$response$data","handleJoinProject","_error$response2","_error$response2$data","children","style","color","type","placeholder","onChange","required","onClick"],"sources":["C:/project final/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../services/axios';  // Ensure axios is properly set up for API calls\r\nimport { useNavigate } from 'react-router-dom';  // For navigation after project creation/joining\r\n\r\nconst Project = () => {\r\n    const [projectData, setProjectData] = useState({ projectName: '', pjpassword: '' });  // Updated fields\r\n    const [error, setError] = useState('');  // Error state for displaying error messages\r\n    const navigate = useNavigate();  // For redirecting after project creation or joining\r\n\r\n    // Handle input change for both project name and password\r\n    const handleInputChange = (e) => {\r\n        setProjectData({ ...projectData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    // Create Project (with token in the header)\r\n    const handleCreateProject = async () => {\r\n        const token = localStorage.getItem('token');  // Get the token from local storage\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`  // Send token in the Authorization header\r\n            }\r\n        };\r\n\r\n        // Frontend validation for missing fields\r\n        if (!projectData.projectName || !projectData.pjpassword) {\r\n            setError('Project name and password are required');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Make the POST request to create the project\r\n            const response = await axios.post('http://localhost:5000/api/projects/create', projectData, config);\r\n            console.log('Project created successfully:', response.data);\r\n\r\n            // Pass projectName and pjpassword to the editor via state\r\n            navigate('/editor', { state: { projectName: projectData.projectName, pjpassword: projectData.pjpassword } });\r\n        } catch (error) {\r\n            console.error('Error creating project:', error);\r\n            setError(error.response?.data?.error || 'Error creating project');  // Set error if project creation fails\r\n        }\r\n    };\r\n\r\n    // Join Project (with token in the header)\r\n    const handleJoinProject = async () => {\r\n        const token = localStorage.getItem('token');  // Get the token from local storage\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`  // Send token in the Authorization header\r\n            }\r\n        };\r\n\r\n        // Frontend validation for missing fields\r\n        if (!projectData.projectName || !projectData.pjpassword) {\r\n            setError('Project name and password are required');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Make the POST request to join the project\r\n            const response = await axios.post('http://localhost:5000/api/projects/join', projectData, config);\r\n            console.log('Joined project successfully:', response.data);\r\n\r\n            // Pass projectName and pjpassword to the editor via state\r\n            navigate('/editor', { state: { projectName: projectData.projectName, pjpassword: projectData.pjpassword } });\r\n        } catch (error) {\r\n            console.error('Error joining project:', error);\r\n            setError(error.response?.data?.error || 'Error joining project');  // Set error if project joining fails\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create or Join a Project</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}  {/* Display error if present */}\r\n\r\n            <input\r\n                type=\"text\"\r\n                name=\"projectName\"  // Corrected to match the backend schema (projectName instead of pjname)\r\n                placeholder=\"Project Name\"\r\n                value={projectData.projectName}  // Corrected to use projectName from state\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                name=\"pjpassword\"  // Corrected to match the backend schema\r\n                placeholder=\"Password\"\r\n                value={projectData.pjpassword}  // Corrected to use pjpassword from state\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <button onClick={handleCreateProject}>Create Project</button>\r\n            <button onClick={handleJoinProject}>Join Project</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Project;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}