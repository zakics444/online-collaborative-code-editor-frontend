{"ast":null,"code":"import axios from'axios';// Get the backend URL from environment variables (for production) or fallback to Render URL (for deployment)\nconst apiUrl=process.env.REACT_APP_API_URL||'http://localhost:5000/api';// Replace with your actual Render URL\n// Create Axios instance with default configuration\nconst axiosInstance=axios.create({baseURL:apiUrl,timeout:10000,// Set timeout for API requests (in milliseconds)\nheaders:{'Content-Type':'application/json'// Set default content type\n}});// Optional: Add interceptors for global error handling or logging\naxiosInstance.interceptors.response.use(response=>{return response;},error=>{if(error.response){console.error('Response error:',error.response.data);}else if(error.request){console.error('Request error:',error.request);}else{console.error('General error:',error.message);}return Promise.reject(error);});export default axiosInstance;","map":{"version":3,"names":["axios","apiUrl","process","env","REACT_APP_API_URL","axiosInstance","create","baseURL","timeout","headers","interceptors","response","use","error","console","data","request","message","Promise","reject"],"sources":["C:/project final/frontend/src/services/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Get the backend URL from environment variables (for production) or fallback to Render URL (for deployment)\r\nconst apiUrl = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';  // Replace with your actual Render URL\r\n\r\n// Create Axios instance with default configuration\r\nconst axiosInstance = axios.create({\r\n    baseURL: apiUrl,\r\n    timeout: 10000,  // Set timeout for API requests (in milliseconds)\r\n    headers: {\r\n        'Content-Type': 'application/json',  // Set default content type\r\n    },\r\n});\r\n\r\n// Optional: Add interceptors for global error handling or logging\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        if (error.response) {\r\n            console.error('Response error:', error.response.data);\r\n        } else if (error.request) {\r\n            console.error('Request error:', error.request);\r\n        } else {\r\n            console.error('General error:', error.message);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,MAAM,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,2BAA2B,CAAG;AAE9E;AACA,KAAM,CAAAC,aAAa,CAAGL,KAAK,CAACM,MAAM,CAAC,CAC/BC,OAAO,CAAEN,MAAM,CACfO,OAAO,CAAE,KAAK,CAAG;AACjBC,OAAO,CAAE,CACL,cAAc,CAAE,kBAAqB;AACzC,CACJ,CAAC,CAAC,CAEF;AACAJ,aAAa,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAClCD,QAAQ,EAAK,CACV,MAAO,CAAAA,QAAQ,CACnB,CAAC,CACAE,KAAK,EAAK,CACP,GAAIA,KAAK,CAACF,QAAQ,CAAE,CAChBG,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAACF,QAAQ,CAACI,IAAI,CAAC,CACzD,CAAC,IAAM,IAAIF,KAAK,CAACG,OAAO,CAAE,CACtBF,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAACG,OAAO,CAAC,CAClD,CAAC,IAAM,CACHF,OAAO,CAACD,KAAK,CAAC,gBAAgB,CAAEA,KAAK,CAACI,OAAO,CAAC,CAClD,CACA,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC,CAChC,CACJ,CAAC,CAED,cAAe,CAAAR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}