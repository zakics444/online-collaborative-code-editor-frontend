{"ast":null,"code":"var _jsxFileName = \"C:\\\\project final\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../services/axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const [projectData, setProjectData] = useState({\n    projectName: '',\n    pjpassword: ''\n  }); // Holds project name and password\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setProjectData({\n      ...projectData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const createProject = async () => {\n    if (!projectData.projectName || !projectData.pjpassword) {\n      setError('Project name or password is missing.');\n      return;\n    }\n    try {\n      const response = await axios.post('/projects/create', projectData);\n      alert('Project created successfully');\n    } catch (err) {\n      setError('Failed to create project.');\n      console.error(err);\n    }\n  };\n  const joinProject = async () => {\n    if (!projectData.projectName || !projectData.pjpassword) {\n      setError('Project name or password is missing.');\n      return;\n    }\n    try {\n      const response = await axios.post('/projects/join', projectData);\n      alert('Joined project successfully');\n    } catch (err) {\n      setError('Failed to join project.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"projectName\",\n      placeholder: \"Project Name\",\n      value: projectData.projectName,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"pjpassword\",\n      placeholder: \"Password\",\n      value: projectData.pjpassword,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createProject,\n      children: \"Create Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: joinProject,\n      children: \"Join Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Project, \"xsoRUaX9LJpz7lAvGCHGyBKRPms=\");\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","Project","_s","projectData","setProjectData","projectName","pjpassword","error","setError","handleChange","e","target","name","value","createProject","response","post","alert","err","console","joinProject","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","style","color","onClick","_c","$RefreshReg$"],"sources":["C:/project final/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../services/axios';\r\n\r\nconst Project = () => {\r\n    const [projectData, setProjectData] = useState({ projectName: '', pjpassword: '' });  // Holds project name and password\r\n    const [error, setError] = useState('');\r\n\r\n    const handleChange = (e) => {\r\n        setProjectData({ ...projectData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const createProject = async () => {\r\n        if (!projectData.projectName || !projectData.pjpassword) {\r\n            setError('Project name or password is missing.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/projects/create', projectData);\r\n            alert('Project created successfully');\r\n        } catch (err) {\r\n            setError('Failed to create project.');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    const joinProject = async () => {\r\n        if (!projectData.projectName || !projectData.pjpassword) {\r\n            setError('Project name or password is missing.');\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const response = await axios.post('/projects/join', projectData);\r\n            alert('Joined project successfully');\r\n        } catch (err) {\r\n            setError('Failed to join project.');\r\n            console.error(err);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                name=\"projectName\"\r\n                placeholder=\"Project Name\"\r\n                value={projectData.projectName}\r\n                onChange={handleChange}\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                name=\"pjpassword\"\r\n                placeholder=\"Password\"\r\n                value={projectData.pjpassword}\r\n                onChange={handleChange}\r\n            />\r\n            <div style={{ color: 'red' }}>{error}</div>\r\n            <button onClick={createProject}>Create Project</button>\r\n            <button onClick={joinProject}>Join Project</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}