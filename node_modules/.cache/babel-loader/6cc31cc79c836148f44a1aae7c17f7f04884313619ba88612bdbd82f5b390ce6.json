{"ast":null,"code":"var _jsxFileName = \"C:\\\\project final\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../services/axios';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const [projectData, setProjectData] = useState({\n    projectName: '',\n    password: ''\n  });\n  const navigate = useNavigate(); // useNavigate hook for programmatic navigation\n\n  const handleInputChange = e => {\n    setProjectData({\n      ...projectData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleCreateProject = async () => {\n    try {\n      // Send API request to create project\n      const response = await axios.post('/projects/create', projectData);\n      if (response.status === 201) {\n        navigate('/editor'); // Redirect to editor after creating a project\n      }\n    } catch (error) {\n      console.error('Error creating project', error);\n    }\n  };\n  const handleJoinProject = async () => {\n    try {\n      // Send API request to join project\n      const response = await axios.post('/projects/join', projectData);\n      if (response.status === 200) {\n        navigate('/editor'); // Redirect to editor after joining a project\n      }\n    } catch (error) {\n      console.error('Error joining project', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create or Join a Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"projectName\",\n      placeholder: \"Project Name\",\n      value: projectData.projectName,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      value: projectData.password,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateProject,\n      children: \"Create Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinProject,\n      children: \"Join Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_s(Project, \"gp6RsJgkMYDDx03WHYiQd8rItq0=\", false, function () {\n  return [useNavigate];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Project","_s","projectData","setProjectData","projectName","password","navigate","handleInputChange","e","target","name","value","handleCreateProject","response","post","status","error","console","handleJoinProject","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/project final/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../services/axios';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Project = () => {\r\n    const [projectData, setProjectData] = useState({ projectName: '', password: '' });\r\n    const navigate = useNavigate();  // useNavigate hook for programmatic navigation\r\n\r\n    const handleInputChange = (e) => {\r\n        setProjectData({ ...projectData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleCreateProject = async () => {\r\n        try {\r\n            // Send API request to create project\r\n            const response = await axios.post('/projects/create', projectData);\r\n            if (response.status === 201) {\r\n                navigate('/editor');  // Redirect to editor after creating a project\r\n            }\r\n        } catch (error) {\r\n            console.error('Error creating project', error);\r\n        }\r\n    };\r\n\r\n    const handleJoinProject = async () => {\r\n        try {\r\n            // Send API request to join project\r\n            const response = await axios.post('/projects/join', projectData);\r\n            if (response.status === 200) {\r\n                navigate('/editor');  // Redirect to editor after joining a project\r\n            }\r\n        } catch (error) {\r\n            console.error('Error joining project', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create or Join a Project</h2>\r\n            <input\r\n                type=\"text\"\r\n                name=\"projectName\"\r\n                placeholder=\"Project Name\"\r\n                value={projectData.projectName}\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                placeholder=\"Password\"\r\n                value={projectData.password}\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <button onClick={handleCreateProject}>Create Project</button>\r\n            <button onClick={handleJoinProject}>Join Project</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}