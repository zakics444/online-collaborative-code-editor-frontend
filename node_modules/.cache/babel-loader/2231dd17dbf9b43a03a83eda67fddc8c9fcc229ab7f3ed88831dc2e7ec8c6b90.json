{"ast":null,"code":"var _jsxFileName = \"C:\\\\project final\\\\frontend\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Editor } from '@monaco-editor/react'; // Import Monaco Editor component\nimport socket from '../services/socket'; // Ensure the socket is set up properly\nimport './Editor.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = () => {\n  _s();\n  const [code, setCode] = useState(''); // Store the code\n  const [language, setLanguage] = useState('javascript'); // Default language for the editor\n  const [messages, setMessages] = useState([]); // Store chat messages\n  const [newMessage, setNewMessage] = useState(''); // Store new message input\n\n  // Listen for real-time code updates from other users\n  useEffect(() => {\n    socket.on('receiveCode', codeData => {\n      setCode(codeData.code); // Update the code from other users\n    });\n    socket.on('receiveMessage', messageData => {\n      setMessages(prevMessages => [...prevMessages, messageData.message]);\n    });\n    return () => {\n      socket.off('receiveCode');\n      socket.off('receiveMessage');\n    };\n  }, []);\n\n  // Emit real-time code changes to the backend\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n    socket.emit('codeChange', {\n      code: newCode\n    });\n  };\n\n  // Handle sending a new chat message\n  const handleSendMessage = () => {\n    if (newMessage.trim()) {\n      socket.emit('sendMessage', {\n        message: newMessage\n      });\n      setMessages(prevMessages => [...prevMessages, {\n        sender: 'You',\n        message: newMessage\n      }]);\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"monaco-editor-container\",\n      children: /*#__PURE__*/_jsxDEV(Editor, {\n        height: \"100%\",\n        defaultLanguage: language,\n        value: code,\n        theme: \"vs-dark\" // VS Code dark theme\n        ,\n        onChange: handleCodeChange,\n        options: {\n          fontSize: 14,\n          automaticLayout: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-messages\",\n        children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: [msg.sender, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 42\n          }, this), \" \", msg.message]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-input\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: newMessage,\n          onChange: e => setNewMessage(e.target.value),\n          placeholder: \"Type a message...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSendMessage,\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(CodeEditor, \"DeShA8jmuJPaOYu4VXrMY4xp4/8=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","Editor","socket","jsxDEV","_jsxDEV","CodeEditor","_s","code","setCode","language","setLanguage","messages","setMessages","newMessage","setNewMessage","on","codeData","messageData","prevMessages","message","off","handleCodeChange","newCode","emit","handleSendMessage","trim","sender","className","children","height","defaultLanguage","value","theme","onChange","options","fontSize","automaticLayout","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/project final/frontend/src/components/Editor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Editor } from '@monaco-editor/react';  // Import Monaco Editor component\r\nimport socket from '../services/socket';  // Ensure the socket is set up properly\r\nimport './Editor.css';  // Import the CSS file\r\n\r\nconst CodeEditor = () => {\r\n    const [code, setCode] = useState('');  // Store the code\r\n    const [language, setLanguage] = useState('javascript');  // Default language for the editor\r\n    const [messages, setMessages] = useState([]);  // Store chat messages\r\n    const [newMessage, setNewMessage] = useState('');  // Store new message input\r\n\r\n    // Listen for real-time code updates from other users\r\n    useEffect(() => {\r\n        socket.on('receiveCode', (codeData) => {\r\n            setCode(codeData.code);  // Update the code from other users\r\n        });\r\n\r\n        socket.on('receiveMessage', (messageData) => {\r\n            setMessages((prevMessages) => [...prevMessages, messageData.message]);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('receiveCode');\r\n            socket.off('receiveMessage');\r\n        };\r\n    }, []);\r\n\r\n    // Emit real-time code changes to the backend\r\n    const handleCodeChange = (newCode) => {\r\n        setCode(newCode);\r\n        socket.emit('codeChange', { code: newCode });\r\n    };\r\n\r\n    // Handle sending a new chat message\r\n    const handleSendMessage = () => {\r\n        if (newMessage.trim()) {\r\n            socket.emit('sendMessage', { message: newMessage });\r\n            setMessages((prevMessages) => [...prevMessages, { sender: 'You', message: newMessage }]);\r\n            setNewMessage('');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            {/* Monaco Editor */}\r\n            <div className=\"monaco-editor-container\">\r\n                <Editor\r\n                    height=\"100%\"\r\n                    defaultLanguage={language}\r\n                    value={code}\r\n                    theme=\"vs-dark\"  // VS Code dark theme\r\n                    onChange={handleCodeChange}\r\n                    options={{\r\n                        fontSize: 14,\r\n                        automaticLayout: true,\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n            {/* Chat Panel */}\r\n            <div className=\"chat-panel\">\r\n                {/* Chat Messages */}\r\n                <div className=\"chat-messages\">\r\n                    {messages.map((msg, index) => (\r\n                        <div key={index}><strong>{msg.sender}:</strong> {msg.message}</div>\r\n                    ))}\r\n                </div>\r\n\r\n                {/* Chat Input */}\r\n                <div className=\"chat-input\">\r\n                    <input\r\n                        type=\"text\"\r\n                        value={newMessage}\r\n                        onChange={(e) => setNewMessage(e.target.value)}\r\n                        placeholder=\"Type a message...\"\r\n                    />\r\n                    <button onClick={handleSendMessage}>Send</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}