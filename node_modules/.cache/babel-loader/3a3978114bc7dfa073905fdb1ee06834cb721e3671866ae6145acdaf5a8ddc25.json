{"ast":null,"code":"var _jsxFileName = \"C:\\\\project final\\\\frontend\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Editor } from '@monaco-editor/react'; // Import the Monaco editor\nimport socket from '../services/socket'; // Ensure the socket is set up properly\nimport axios from '../services/axios'; // Import Axios to make API requests\nimport Chat from './Chat'; // Import the Chat component\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CodeEditor = ({\n  projectId\n}) => {\n  _s();\n  const [code, setCode] = useState(''); // Store the code\n  const [language, setLanguage] = useState('javascript'); // Default language for the editor\n  const [isSaved, setIsSaved] = useState(false); // To track if the code is saved\n\n  // Fetch the project code when the component mounts\n  useEffect(() => {\n    const fetchProjectCode = async () => {\n      try {\n        const response = await axios.get(`/api/projects/${projectId}/code`);\n        setCode(response.data.code || ''); // Set the project code if available\n      } catch (error) {\n        console.error('Failed to fetch project code:', error.message);\n      }\n    };\n    fetchProjectCode();\n  }, [projectId]);\n\n  // Listen for real-time code updates from other users\n  useEffect(() => {\n    socket.on('receiveCode', codeData => {\n      setCode(codeData.code); // Update the code from other users\n    });\n    return () => {\n      socket.off('receiveCode');\n    };\n  }, []);\n\n  // Emit real-time code changes to the backend\n  const handleCodeChange = newCode => {\n    setCode(newCode);\n    socket.emit('codeChange', {\n      projectId,\n      code: newCode\n    }); // Emit to specific project\n  };\n\n  // Save code to the project\n  const saveCode = async () => {\n    try {\n      await axios.post(`/api/projects/saveCode/${projectId}`, {\n        code\n      });\n      setIsSaved(true); // Set the code as saved\n      alert('Code saved successfully');\n    } catch (error) {\n      console.error('Error saving code:', error.message);\n      alert('Failed to save code');\n    }\n  };\n\n  // Unsave code and revert to the original code\n  const unsaveCode = async () => {\n    try {\n      await axios.post(`/api/projects/unsaveCode/${projectId}`);\n      setIsSaved(false); // Set the code as unsaved\n      alert('Code reverted to the original');\n      // Re-fetch the original code\n      const response = await axios.get(`/api/projects/${projectId}/code`);\n      setCode(response.data.code || ''); // Update the code\n    } catch (error) {\n      console.error('Error reverting code:', error.message);\n      alert('Failed to revert code');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"editor-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"editor-and-chat\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(Editor, {\n          height: \"80vh\",\n          language: language,\n          value: code,\n          theme: \"vs-dark\" // VS Code dark theme\n          ,\n          onChange: handleCodeChange,\n          options: {\n            fontSize: 14,\n            automaticLayout: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            marginTop: '10px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: saveCode,\n            disabled: isSaved,\n            style: {\n              padding: '10px',\n              marginRight: '10px'\n            },\n            children: \"Save Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: unsaveCode,\n            disabled: !isSaved,\n            style: {\n              padding: '10px'\n            },\n            children: \"Unsave Code\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 0.4,\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Chat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(CodeEditor, \"7Venfw7RLOUKX+1Fr5OKxNik15c=\");\n_c = CodeEditor;\nexport default CodeEditor;\nvar _c;\n$RefreshReg$(_c, \"CodeEditor\");","map":{"version":3,"names":["React","useState","useEffect","Editor","socket","axios","Chat","jsxDEV","_jsxDEV","CodeEditor","projectId","_s","code","setCode","language","setLanguage","isSaved","setIsSaved","fetchProjectCode","response","get","data","error","console","message","on","codeData","off","handleCodeChange","newCode","emit","saveCode","post","alert","unsaveCode","className","children","style","flex","height","value","theme","onChange","options","fontSize","automaticLayout","fileName","_jsxFileName","lineNumber","columnNumber","marginTop","onClick","disabled","padding","marginRight","_c","$RefreshReg$"],"sources":["C:/project final/frontend/src/components/Editor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Editor } from '@monaco-editor/react';  // Import the Monaco editor\r\nimport socket from '../services/socket';  // Ensure the socket is set up properly\r\nimport axios from '../services/axios';  // Import Axios to make API requests\r\nimport Chat from './Chat';  // Import the Chat component\r\n\r\nconst CodeEditor = ({ projectId }) => {\r\n    const [code, setCode] = useState('');  // Store the code\r\n    const [language, setLanguage] = useState('javascript');  // Default language for the editor\r\n    const [isSaved, setIsSaved] = useState(false);  // To track if the code is saved\r\n\r\n    // Fetch the project code when the component mounts\r\n    useEffect(() => {\r\n        const fetchProjectCode = async () => {\r\n            try {\r\n                const response = await axios.get(`/api/projects/${projectId}/code`);\r\n                setCode(response.data.code || '');  // Set the project code if available\r\n            } catch (error) {\r\n                console.error('Failed to fetch project code:', error.message);\r\n            }\r\n        };\r\n        fetchProjectCode();\r\n    }, [projectId]);\r\n\r\n    // Listen for real-time code updates from other users\r\n    useEffect(() => {\r\n        socket.on('receiveCode', (codeData) => {\r\n            setCode(codeData.code);  // Update the code from other users\r\n        });\r\n\r\n        return () => {\r\n            socket.off('receiveCode');\r\n        };\r\n    }, []);\r\n\r\n    // Emit real-time code changes to the backend\r\n    const handleCodeChange = (newCode) => {\r\n        setCode(newCode);\r\n        socket.emit('codeChange', { projectId, code: newCode });  // Emit to specific project\r\n    };\r\n\r\n    // Save code to the project\r\n    const saveCode = async () => {\r\n        try {\r\n            await axios.post(`/api/projects/saveCode/${projectId}`, { code });\r\n            setIsSaved(true);  // Set the code as saved\r\n            alert('Code saved successfully');\r\n        } catch (error) {\r\n            console.error('Error saving code:', error.message);\r\n            alert('Failed to save code');\r\n        }\r\n    };\r\n\r\n    // Unsave code and revert to the original code\r\n    const unsaveCode = async () => {\r\n        try {\r\n            await axios.post(`/api/projects/unsaveCode/${projectId}`);\r\n            setIsSaved(false);  // Set the code as unsaved\r\n            alert('Code reverted to the original');\r\n            // Re-fetch the original code\r\n            const response = await axios.get(`/api/projects/${projectId}/code`);\r\n            setCode(response.data.code || '');  // Update the code\r\n        } catch (error) {\r\n            console.error('Error reverting code:', error.message);\r\n            alert('Failed to revert code');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"editor-container\">\r\n            <div className=\"editor-and-chat\">\r\n                <div style={{ flex: 1 }}>\r\n                    <Editor\r\n                        height=\"80vh\"\r\n                        language={language}\r\n                        value={code}\r\n                        theme=\"vs-dark\"  // VS Code dark theme\r\n                        onChange={handleCodeChange}\r\n                        options={{\r\n                            fontSize: 14,\r\n                            automaticLayout: true,\r\n                        }}\r\n                    />\r\n                    <div style={{ marginTop: '10px' }}>\r\n                        <button onClick={saveCode} disabled={isSaved} style={{ padding: '10px', marginRight: '10px' }}>\r\n                            Save Code\r\n                        </button>\r\n                        <button onClick={unsaveCode} disabled={!isSaved} style={{ padding: '10px' }}>\r\n                            Unsave Code\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n                <div style={{ flex: 0.4, marginTop: '20px' }}>\r\n                    <Chat />  {/* Display the chat component */}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CodeEditor;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}