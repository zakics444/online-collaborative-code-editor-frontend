{"ast":null,"code":"import React,{useState,useEffect}from'react';import socket from'../services/socket';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[message,setMessage]=useState('');const[chatLog,setChatLog]=useState([]);useEffect(()=>{// Listen for incoming chat messages\nsocket.on('receiveMessage',messageData=>{setChatLog(prevLog=>[...prevLog,messageData]);// Append new messages to the chat log\n});socket.on('userJoined',userData=>{setChatLog(prevLog=>[...prevLog,{message:`${userData.username} has joined the chat!`,systemMessage:true}]);// Notify when a new user joins\n});return()=>{socket.off('receiveMessage');socket.off('userJoined');};},[]);// Emit chat message to the backend\nconst sendMessage=()=>{if(message.trim()){socket.emit('sendMessage',{message});setMessage('');// Clear the input field after sending\n}};return/*#__PURE__*/_jsxs(\"div\",{style:{marginTop:'20px'},children:[/*#__PURE__*/_jsx(\"div\",{style:{height:'300px',overflowY:'scroll',border:'1px solid #ddd',padding:'10px'},children:chatLog.map((msg,index)=>/*#__PURE__*/_jsx(\"p\",{style:{margin:'5px 0',color:msg.systemMessage?'gray':'black'},children:msg.message},index))}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:message,onChange:e=>setMessage(e.target.value),placeholder:\"Type a message\",style:{width:'80%',padding:'10px',marginTop:'10px'}}),/*#__PURE__*/_jsx(\"button\",{onClick:sendMessage,style:{padding:'10px'},children:\"Send\"})]})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","socket","jsx","_jsx","jsxs","_jsxs","Chat","message","setMessage","chatLog","setChatLog","on","messageData","prevLog","userData","username","systemMessage","off","sendMessage","trim","emit","style","marginTop","children","height","overflowY","border","padding","map","msg","index","margin","color","type","value","onChange","e","target","placeholder","width","onClick"],"sources":["C:/project final/frontend/src/components/Chat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from '../services/socket';\r\n\r\nconst Chat = () => {\r\n    const [message, setMessage] = useState('');\r\n    const [chatLog, setChatLog] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Listen for incoming chat messages\r\n        socket.on('receiveMessage', (messageData) => {\r\n            setChatLog((prevLog) => [...prevLog, messageData]);  // Append new messages to the chat log\r\n        });\r\n\r\n        socket.on('userJoined', (userData) => {\r\n            setChatLog((prevLog) => [\r\n                ...prevLog,\r\n                { message: `${userData.username} has joined the chat!`, systemMessage: true },\r\n            ]);  // Notify when a new user joins\r\n        });\r\n\r\n        return () => {\r\n            socket.off('receiveMessage');\r\n            socket.off('userJoined');\r\n        };\r\n    }, []);\r\n\r\n    // Emit chat message to the backend\r\n    const sendMessage = () => {\r\n        if (message.trim()) {\r\n            socket.emit('sendMessage', { message });\r\n            setMessage('');  // Clear the input field after sending\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div style={{ marginTop: '20px' }}>\r\n            {/* Chat Messages */}\r\n            <div style={{ height: '300px', overflowY: 'scroll', border: '1px solid #ddd', padding: '10px' }}>\r\n                {chatLog.map((msg, index) => (\r\n                    <p key={index} style={{ margin: '5px 0', color: msg.systemMessage ? 'gray' : 'black' }}>\r\n                        {msg.message}\r\n                    </p>\r\n                ))}\r\n            </div>\r\n\r\n            {/* Chat Input */}\r\n            <div>\r\n                <input\r\n                    type=\"text\"\r\n                    value={message}\r\n                    onChange={(e) => setMessage(e.target.value)}\r\n                    placeholder=\"Type a message\"\r\n                    style={{ width: '80%', padding: '10px', marginTop: '10px' }}\r\n                />\r\n                <button onClick={sendMessage} style={{ padding: '10px' }}>Send</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Chat;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAExC,KAAM,CAAAC,IAAI,CAAGA,CAAA,GAAM,CACf,KAAM,CAACC,OAAO,CAAEC,UAAU,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CAC1C,KAAM,CAACU,OAAO,CAAEC,UAAU,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAE1CC,SAAS,CAAC,IAAM,CACZ;AACAC,MAAM,CAACU,EAAE,CAAC,gBAAgB,CAAGC,WAAW,EAAK,CACzCF,UAAU,CAAEG,OAAO,EAAK,CAAC,GAAGA,OAAO,CAAED,WAAW,CAAC,CAAC,CAAG;AACzD,CAAC,CAAC,CAEFX,MAAM,CAACU,EAAE,CAAC,YAAY,CAAGG,QAAQ,EAAK,CAClCJ,UAAU,CAAEG,OAAO,EAAK,CACpB,GAAGA,OAAO,CACV,CAAEN,OAAO,CAAE,GAAGO,QAAQ,CAACC,QAAQ,uBAAuB,CAAEC,aAAa,CAAE,IAAK,CAAC,CAChF,CAAC,CAAG;AACT,CAAC,CAAC,CAEF,MAAO,IAAM,CACTf,MAAM,CAACgB,GAAG,CAAC,gBAAgB,CAAC,CAC5BhB,MAAM,CAACgB,GAAG,CAAC,YAAY,CAAC,CAC5B,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAC,WAAW,CAAGA,CAAA,GAAM,CACtB,GAAIX,OAAO,CAACY,IAAI,CAAC,CAAC,CAAE,CAChBlB,MAAM,CAACmB,IAAI,CAAC,aAAa,CAAE,CAAEb,OAAQ,CAAC,CAAC,CACvCC,UAAU,CAAC,EAAE,CAAC,CAAG;AACrB,CACJ,CAAC,CAED,mBACIH,KAAA,QAAKgB,KAAK,CAAE,CAAEC,SAAS,CAAE,MAAO,CAAE,CAAAC,QAAA,eAE9BpB,IAAA,QAAKkB,KAAK,CAAE,CAAEG,MAAM,CAAE,OAAO,CAAEC,SAAS,CAAE,QAAQ,CAAEC,MAAM,CAAE,gBAAgB,CAAEC,OAAO,CAAE,MAAO,CAAE,CAAAJ,QAAA,CAC3Fd,OAAO,CAACmB,GAAG,CAAC,CAACC,GAAG,CAAEC,KAAK,gBACpB3B,IAAA,MAAekB,KAAK,CAAE,CAAEU,MAAM,CAAE,OAAO,CAAEC,KAAK,CAAEH,GAAG,CAACb,aAAa,CAAG,MAAM,CAAG,OAAQ,CAAE,CAAAO,QAAA,CAClFM,GAAG,CAACtB,OAAO,EADRuB,KAEL,CACN,CAAC,CACD,CAAC,cAGNzB,KAAA,QAAAkB,QAAA,eACIpB,IAAA,UACI8B,IAAI,CAAC,MAAM,CACXC,KAAK,CAAE3B,OAAQ,CACf4B,QAAQ,CAAGC,CAAC,EAAK5B,UAAU,CAAC4B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC5CI,WAAW,CAAC,gBAAgB,CAC5BjB,KAAK,CAAE,CAAEkB,KAAK,CAAE,KAAK,CAAEZ,OAAO,CAAE,MAAM,CAAEL,SAAS,CAAE,MAAO,CAAE,CAC/D,CAAC,cACFnB,IAAA,WAAQqC,OAAO,CAAEtB,WAAY,CAACG,KAAK,CAAE,CAAEM,OAAO,CAAE,MAAO,CAAE,CAAAJ,QAAA,CAAC,MAAI,CAAQ,CAAC,EACtE,CAAC,EACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAjB,IAAI","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}