{"ast":null,"code":"import axios from 'axios';\n\n// Get the backend URL from environment variables (for production) or fallback to Render URL (for deployment)\nconst apiUrl = 'http://localhost:5000/api'; // Replace with your actual Render URL\n\n// Create Axios instance with default configuration\nconst axiosInstance = axios.create({\n  baseURL: apiUrl,\n  timeout: 10000,\n  // Set timeout for API requests (in milliseconds)\n  headers: {\n    'Content-Type': 'application/json' // Set default content type\n  }\n});\n\n// Optional: Add interceptors for global error handling or logging\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, error => {\n  if (error.response) {\n    console.error('Response error:', error.response.data);\n  } else if (error.request) {\n    console.error('Request error:', error.request);\n  } else {\n    console.error('General error:', error.message);\n  }\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"names":["axios","apiUrl","axiosInstance","create","baseURL","timeout","headers","interceptors","response","use","error","console","data","request","message","Promise","reject"],"sources":["C:/project final/frontend/src/services/axios.js"],"sourcesContent":["import axios from 'axios';\r\n\r\n// Get the backend URL from environment variables (for production) or fallback to Render URL (for deployment)\r\nconst apiUrl =  'http://localhost:5000/api';  // Replace with your actual Render URL\r\n\r\n// Create Axios instance with default configuration\r\nconst axiosInstance = axios.create({\r\n    baseURL: apiUrl,\r\n    timeout: 10000,  // Set timeout for API requests (in milliseconds)\r\n    headers: {\r\n        'Content-Type': 'application/json',  // Set default content type\r\n    },\r\n});\r\n\r\n// Optional: Add interceptors for global error handling or logging\r\naxiosInstance.interceptors.response.use(\r\n    (response) => {\r\n        return response;\r\n    },\r\n    (error) => {\r\n        if (error.response) {\r\n            console.error('Response error:', error.response.data);\r\n        } else if (error.request) {\r\n            console.error('Request error:', error.request);\r\n        } else {\r\n            console.error('General error:', error.message);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\nexport default axiosInstance;\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,MAAM,GAAI,2BAA2B,CAAC,CAAE;;AAE9C;AACA,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAM,CAAC;EAC/BC,OAAO,EAAEH,MAAM;EACfI,OAAO,EAAE,KAAK;EAAG;EACjBC,OAAO,EAAE;IACL,cAAc,EAAE,kBAAkB,CAAG;EACzC;AACJ,CAAC,CAAC;;AAEF;AACAJ,aAAa,CAACK,YAAY,CAACC,QAAQ,CAACC,GAAG,CAClCD,QAAQ,IAAK;EACV,OAAOA,QAAQ;AACnB,CAAC,EACAE,KAAK,IAAK;EACP,IAAIA,KAAK,CAACF,QAAQ,EAAE;IAChBG,OAAO,CAACD,KAAK,CAAC,iBAAiB,EAAEA,KAAK,CAACF,QAAQ,CAACI,IAAI,CAAC;EACzD,CAAC,MAAM,IAAIF,KAAK,CAACG,OAAO,EAAE;IACtBF,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACG,OAAO,CAAC;EAClD,CAAC,MAAM;IACHF,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAACI,OAAO,CAAC;EAClD;EACA,OAAOC,OAAO,CAACC,MAAM,CAACN,KAAK,CAAC;AAChC,CACJ,CAAC;AAED,eAAeR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}