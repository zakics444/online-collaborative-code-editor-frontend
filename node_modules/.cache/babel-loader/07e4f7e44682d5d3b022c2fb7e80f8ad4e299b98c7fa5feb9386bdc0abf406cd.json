{"ast":null,"code":"var _jsxFileName = \"C:\\\\project final\\\\frontend\\\\src\\\\components\\\\Project.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from '../services/axios'; // Make sure axios is properly set up for API calls\nimport { useNavigate } from 'react-router-dom'; // For navigation after project creation/joining\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Project = () => {\n  _s();\n  const [projectData, setProjectData] = useState({\n    name: '',\n    password: ''\n  }); // Changed to match backend schema\n  const [error, setError] = useState(''); // Error state for displaying error messages\n  const navigate = useNavigate(); // For redirecting after project creation or joining\n\n  // Handle input change for both project name and password\n  const handleInputChange = e => {\n    setProjectData({\n      ...projectData,\n      [e.target.name]: e.target.value\n    }, {\n      ...projectData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Create Project (with token in the header)\n  const handleCreateProject = async () => {\n    const token = localStorage.getItem('token'); // Get the token from local storage\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}` // Send token in the Authorization header\n      }\n    };\n    try {\n      // Ensure project name and password are not empty before sending the request\n      if (!projectData.name || !projectData.password) {\n        alert('Project name and password are required');\n        navigate('/editor');\n        return;\n      }\n\n      // Make the POST request to create the project\n      const response = await axios.post('/projects/create', projectData, config);\n      console.log('Project created successfully:', response.data);\n      navigate('/editor'); // Redirect to the editor after successful project creation\n    } catch (error) {\n      var _error$response, _error$response$data;\n      console.error('Error creating project', error);\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Error creating project'); // Set error if project creation fails\n    }\n  };\n\n  // Join Project (with token in the header)\n  const handleJoinProject = async () => {\n    const token = localStorage.getItem('token'); // Get the token from local storage\n    const config = {\n      headers: {\n        'Authorization': `Bearer ${token}` // Send token in the Authorization header\n      }\n    };\n    try {\n      // Ensure project name and password are not empty before sending the request\n      if (!projectData.name || !projectData.password) {\n        alert('Project name and password are required');\n        navigate('/editor');\n        return;\n      }\n\n      // Make the POST request to join the project\n      const response = await axios.post('/projects/join', projectData, config);\n      console.log('Joined project successfully:', response.data);\n      navigate('/editor'); // Redirect to the editor after joining the project\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error joining project', error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || 'Error joining project'); // Set error if project joining fails\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Create or Join a Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 23\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"pjname\" // Changed to match backend schema\n      ,\n      placeholder: \"Project Name\",\n      value: projectData.name // Changed to match backend schema\n      ,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"pjpassword\" // Changed to match backend schema\n      ,\n      placeholder: \"Password\",\n      value: projectData.password // Changed to match backend schema\n      ,\n      onChange: handleInputChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateProject,\n      children: \"Create Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleJoinProject,\n      children: \"Join Project\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Project, \"eMriRwBVs3ei9ZPPqZLBkfhOyTQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Project;\nexport default Project;\nvar _c;\n$RefreshReg$(_c, \"Project\");","map":{"version":3,"names":["React","useState","axios","useNavigate","jsxDEV","_jsxDEV","Project","_s","projectData","setProjectData","name","password","error","setError","navigate","handleInputChange","e","target","value","handleCreateProject","token","localStorage","getItem","config","headers","alert","response","post","console","log","data","_error$response","_error$response$data","handleJoinProject","_error$response2","_error$response2$data","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","onChange","required","onClick","_c","$RefreshReg$"],"sources":["C:/project final/frontend/src/components/Project.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from '../services/axios';  // Make sure axios is properly set up for API calls\r\nimport { useNavigate } from 'react-router-dom';  // For navigation after project creation/joining\r\n\r\nconst Project = () => {\r\n    const [projectData, setProjectData] = useState({ name: '', password: '' });  // Changed to match backend schema\r\n    const [error, setError] = useState('');  // Error state for displaying error messages\r\n    const navigate = useNavigate();  // For redirecting after project creation or joining\r\n\r\n    // Handle input change for both project name and password\r\n    const handleInputChange = (e) => {\r\n        setProjectData({ ...projectData, [e.target.name]: e.target.value },\r\n                       { ...projectData, [e.target.name]: e.target.value }\r\n        );\r\n    };\r\n\r\n    // Create Project (with token in the header)\r\n    const handleCreateProject = async () => {\r\n        const token = localStorage.getItem('token');  // Get the token from local storage\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`  // Send token in the Authorization header\r\n            }\r\n        };\r\n\r\n        try {\r\n            // Ensure project name and password are not empty before sending the request\r\n            if (!projectData.name || !projectData.password) {\r\n                alert('Project name and password are required');\r\n                navigate('/editor');\r\n                return;\r\n            }\r\n\r\n            // Make the POST request to create the project\r\n            const response = await axios.post('/projects/create', projectData, config);\r\n            console.log('Project created successfully:', response.data);\r\n            navigate('/editor');  // Redirect to the editor after successful project creation\r\n        } catch (error) {\r\n            console.error('Error creating project', error);\r\n            setError(error.response?.data?.error || 'Error creating project');  // Set error if project creation fails\r\n        }\r\n    };\r\n\r\n    // Join Project (with token in the header)\r\n    const handleJoinProject = async () => {\r\n        const token = localStorage.getItem('token');  // Get the token from local storage\r\n        const config = {\r\n            headers: {\r\n                'Authorization': `Bearer ${token}`  // Send token in the Authorization header\r\n            }\r\n        };\r\n\r\n        try {\r\n            // Ensure project name and password are not empty before sending the request\r\n            if (!projectData.name || !projectData.password) {\r\n                alert('Project name and password are required');\r\n                navigate('/editor');\r\n                return;\r\n            }\r\n\r\n            // Make the POST request to join the project\r\n            const response = await axios.post('/projects/join', projectData, config);\r\n            console.log('Joined project successfully:', response.data);\r\n            navigate('/editor');  // Redirect to the editor after joining the project\r\n        } catch (error) {\r\n            console.error('Error joining project', error);\r\n            setError(error.response?.data?.error || 'Error joining project');  // Set error if project joining fails\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Create or Join a Project</h2>\r\n            {error && <p style={{ color: 'red' }}>{error}</p>}  {/* Display error if present */}\r\n            <input\r\n                type=\"text\"\r\n                name=\"pjname\"  // Changed to match backend schema\r\n                placeholder=\"Project Name\"\r\n                value={projectData.name}  // Changed to match backend schema\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <input\r\n                type=\"password\"\r\n                name=\"pjpassword\"  // Changed to match backend schema\r\n                placeholder=\"Password\"\r\n                value={projectData.password}  // Changed to match backend schema\r\n                onChange={handleInputChange}\r\n                required\r\n            />\r\n            <button onClick={handleCreateProject}>Create Project</button>\r\n            <button onClick={handleJoinProject}>Join Project</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Project;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}