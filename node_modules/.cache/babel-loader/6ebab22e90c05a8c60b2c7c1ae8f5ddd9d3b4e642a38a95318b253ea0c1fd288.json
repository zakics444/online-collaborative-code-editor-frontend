{"ast":null,"code":"var _jsxFileName = \"C:\\\\project final\\\\frontend\\\\src\\\\components\\\\Editor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport socket from '../services/socket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Editor = () => {\n  _s();\n  const [code, setCode] = useState('');\n\n  // Listen for real-time code updates from other users\n  useEffect(() => {\n    socket.on('receiveCode', codeData => {\n      setCode(codeData.code);\n    });\n    return () => {\n      socket.off('receiveCode');\n    };\n  }, []);\n\n  // Emit real-time code changes to the backend\n  const handleCodeChange = e => {\n    const newCode = e.target.value;\n    setCode(newCode);\n    socket.emit('codeChange', {\n      code: newCode\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"textarea\", {\n    value: code,\n    onChange: handleCodeChange,\n    rows: \"20\",\n    cols: \"50\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n_s(Editor, \"ZW29czzba029rFpLXkwMweJBtew=\");\n_c = Editor;\nexport default Editor;\nvar _c;\n$RefreshReg$(_c, \"Editor\");","map":{"version":3,"names":["React","useState","useEffect","socket","jsxDEV","_jsxDEV","Editor","_s","code","setCode","on","codeData","off","handleCodeChange","e","newCode","target","value","emit","onChange","rows","cols","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/project final/frontend/src/components/Editor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport socket from '../services/socket';\r\n\r\nconst Editor = () => {\r\n    const [code, setCode] = useState('');\r\n\r\n    // Listen for real-time code updates from other users\r\n    useEffect(() => {\r\n        socket.on('receiveCode', (codeData) => {\r\n            setCode(codeData.code);\r\n        });\r\n\r\n        return () => {\r\n            socket.off('receiveCode');\r\n        };\r\n    }, []);\r\n\r\n    // Emit real-time code changes to the backend\r\n    const handleCodeChange = (e) => {\r\n        const newCode = e.target.value;\r\n        setCode(newCode);\r\n        socket.emit('codeChange', { code: newCode });\r\n    };\r\n\r\n    return (\r\n        <textarea\r\n            value={code}\r\n            onChange={handleCodeChange}\r\n            rows=\"20\"\r\n            cols=\"50\"\r\n        ></textarea>\r\n    );\r\n};\r\n\r\nexport default Editor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAEpC;EACAC,SAAS,CAAC,MAAM;IACZC,MAAM,CAACO,EAAE,CAAC,aAAa,EAAGC,QAAQ,IAAK;MACnCF,OAAO,CAACE,QAAQ,CAACH,IAAI,CAAC;IAC1B,CAAC,CAAC;IAEF,OAAO,MAAM;MACTL,MAAM,CAACS,GAAG,CAAC,aAAa,CAAC;IAC7B,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMC,gBAAgB,GAAIC,CAAC,IAAK;IAC5B,MAAMC,OAAO,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAC9BR,OAAO,CAACM,OAAO,CAAC;IAChBZ,MAAM,CAACe,IAAI,CAAC,YAAY,EAAE;MAAEV,IAAI,EAAEO;IAAQ,CAAC,CAAC;EAChD,CAAC;EAED,oBACIV,OAAA;IACIY,KAAK,EAAET,IAAK;IACZW,QAAQ,EAAEN,gBAAiB;IAC3BO,IAAI,EAAC,IAAI;IACTC,IAAI,EAAC;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEpB,CAAC;AAAClB,EAAA,CA7BID,MAAM;AAAAoB,EAAA,GAANpB,MAAM;AA+BZ,eAAeA,MAAM;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}